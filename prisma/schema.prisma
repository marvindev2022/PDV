generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model users {
    id        String   @id @default(uuid())
    email     String   @unique
    name      String
    password  String
    cpf       String   @unique
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    orders    orders[]
}

model clients {
    id        String     @id @default(uuid())
    email     String     @unique
    name      String
    password  String
    cpf       String     @unique
    createdAt DateTime   @default(now())
    updatedAt DateTime   @updatedAt
    vehicles  vehicles[]
    orders    orders[]
}

model vehicles {
    id           String   @id @default(uuid())
    name         String
    model        String
    plate        String   @unique
    clientId     String
    brand        String
    year         String
    createdAt    DateTime @default(now())
    updatedAt    DateTime @updatedAt
    client       clients  @relation(fields: [clientId], references: [id])
}

model categories {
    id        String     @id @default(uuid())
    name      String
    createdAt DateTime   @default(now())
    updatedAt DateTime   @updatedAt
    products  products[]
}

model subcategories {
    id        String     @id @default(uuid())
    name      String
    createdAt DateTime   @default(now())
    updatedAt DateTime   @updatedAt
    products  products[]
}

model products {
    id              String        @id @default(uuid())
    name            String        @unique
    description     String?
    sku             String
    barcode         String
    manufacturer    String
    supplier        String
    purchasePrice   Float
    costPrice       Float
    markup          Float
    sellingPrice    Float
    profitAmount    Float
    taxes           Json
    shippingCost    Float
    fees            Json
    quantityInStock Int
    reorderLevel    Int
    location        String
    notes           String?
    createdAt       DateTime      @default(now())
    updatedAt       DateTime      @updatedAt
    categoryId      String
    subcategoryId   String
    category        categories    @relation(fields: [categoryId], references: [id])
    subcategory     subcategories @relation(fields: [subcategoryId], references: [id])
    orders          orders[]
}

model orders {
    id        String     @id @default(uuid())
    userId    String
    clientId  String
    createdAt DateTime   @default(now())
    updatedAt DateTime   @updatedAt
    products  products[]
    client    clients    @relation(fields: [clientId], references: [id])
    user      users      @relation(fields: [userId], references: [id])
}
